# A simple prompt that displays informations in a minimal way
#



_git_prompt_info() {
  if STATUS=$(git status -sb --porcelain=v2) 2>/dev/null; then                                         
    # Branch name
    ref=${STATUS##*branch.head }
    ref=${ref%%
*}

    # Commits ahead/behind
    branch_ab=${STATUS##*\# branch.ab +}
    commits_to_push=${branch_ab%% *}

    commits_to_pull=${branch_ab#*-}
    commits_to_pull=${commits_to_pull%%
*}
    [ $commits_to_push -gt 0 ] 2>/dev/null && commits_to_push=%B%F{cyan}%b$commits_to_push⇑ || commits_to_push=
    [ $commits_to_pull -gt 0 ] 2>/dev/null && commits_to_pull=%B%F{red}%b$commits_to_pull⇓  || commits_to_pull=

    case ${STATUS##*
} in
      \#*) print "$commits_to_pull\
$commits_to_push\
%F{green}$ref";;
      *)
        del=
        ins=
        # Only show +/- when stat not empty
        if ! stat=$(git diff --exit-code --shortstat "$ref" --) 2>/dev/null;then
          stat=${stat#*, }
          ins=+${stat% i*}
          stat=${stat##*, }
          del=-${stat% d*}
          
          # Check if there are additions/deletions
          [ "$ins" -eq "$ins" ] 2>/dev/null || ins=
          [ "$del" -eq "$del" ] 2>/dev/null || del=
        fi

        # Parse each status line
        local IFS=$'\n'
        for line in ${=STATUS} ;do
          case $line in
            "? "*|1\ [.A-Z][A-Z]\ *) new=$(( new + 1 )) ;;
          esac
          case $line in
            1\ [A.][A.]\ *) add=$(( add + 1 )) ;;
            1\ [R.][R.]\ *) rename=$(( rename + 1 )) ;;
            1\ [D.][D.]\ *) delete=$(( delete + 1 )) ;;
            1\ [M.][M.]\ *) modify=$(( modify + 1 )) ;;
          esac
        done
            
      print "\
$commits_to_pull\
$commits_to_push\
%F{white}$new\
%F{green}$add\
%F{blue}$rename\
%F{red}$delete\
%F{magenta}$modify\
%F{yellow}$ref\
%F{green}$ins\
%F{red}$del";;
    esac
  else
    parentdir=${PWD%/*}
    visible=$(ls -1 | wc -l)
    print "%F{yellow}$visible%F{magenta}$(( $(ls -A1 | wc -l) - visible ))%F{white}${parentdir##*/}"
  fi
}

prompt_setup() {
  prompt_opts=(cr percent sp subst)
  PROMPT='%(!:%B%F{red}%m:%B%F{green}%m)%f%b %(?:%F{cyan}:%F{magenta})%c%f '
  RPROMPT='$(_git_prompt_info)%f'
}

prompt_setup "$@"
